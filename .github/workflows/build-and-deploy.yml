name: Build and Deploy Weather App

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKERHUB_CACHE_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/buildcache

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
    - name: Pobierz kod ÅºrÃ³dÅ‚owy
      uses: actions/checkout@v4

    - name: Skonfiguruj Docker Buildx (dla multi-arch)
      uses: docker/setup-buildx-action@v3

    - name: Zaloguj do GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Zaloguj do DockerHub (dla cache)
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Wygeneruj tagi dla obrazu
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Zbuduj obraz do testÃ³w (tylko AMD64)
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        load: true
        tags: test-image:latest
        cache-from: |
          type=registry,ref=${{ env.DOCKERHUB_CACHE_REPO }}:buildcache-amd64
          type=registry,ref=${{ env.DOCKERHUB_CACHE_REPO }}:buildcache-arm64
        cache-to: type=registry,ref=${{ env.DOCKERHUB_CACHE_REPO }}:buildcache-amd64,mode=max

    - name: Skanuj obraz pod kÄ…tem podatnoÅ›ci (Trivy)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'test-image:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'
        exit-code: '1'  # Zatrzymaj pipeline jeÅ›li znajdzie CRITICAL/HIGH

    - name: WyÅ›lij wyniki skanowania do GitHub Security
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Zbuduj i wyÅ›lij obraz multi-arch
      if: success()
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64  
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: |
          type=registry,ref=${{ env.DOCKERHUB_CACHE_REPO }}:buildcache-amd64
          type=registry,ref=${{ env.DOCKERHUB_CACHE_REPO }}:buildcache-arm64
        cache-to: |
          type=registry,ref=${{ env.DOCKERHUB_CACHE_REPO }}:buildcache-amd64,mode=max
          type=registry,ref=${{ env.DOCKERHUB_CACHE_REPO }}:buildcache-arm64,mode=max

    - name: Podsumowanie buildu
      if: always()
      run: |
        echo "## ðŸš€ Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Repository:** ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Tags:** ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Platforms:** linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY
        echo "- **Cache Repository:** ${{ env.DOCKERHUB_CACHE_REPO }}" >> $GITHUB_STEP_SUMMARY
